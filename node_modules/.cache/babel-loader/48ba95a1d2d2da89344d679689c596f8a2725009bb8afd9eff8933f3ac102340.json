{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aarya\\\\Hacathon-Boiler-KWA\\\\src\\\\components\\\\ResumeAnalysisPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { X } from 'lucide-react';\n\n// function ResumeAnalysisPage() {\n//   const [resumeFile, setResumeFile] = useState(null);\n//   const [jobDescription, setJobDescription] = useState('');\n//   const [analysisResult, setAnalysisResult] = useState('');\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const handleFileChange = (event) => {\n//     const file = event.target.files[0];\n//     setResumeFile(file);\n//   };\n\n//   const handleAnalysis = async () => {\n//     if (!resumeFile) {\n//       setError('Please upload a resume file.');\n//       return;\n//     }\n//     if (!jobDescription) {\n//       setError('Please enter a job description.');\n//       return;\n//     }\n\n//     setIsLoading(true);\n//     setError(null);\n\n//     try {\n//       // Prepare FormData with the file and job description\n//       const formData = new FormData();\n//       formData.append('resumeFile', resumeFile);\n//       formData.append('jobDescription', jobDescription);\n\n//       // Send FormData to the backend\n//       const res = await fetch('http://localhost:4000/chat', {\n//         method: 'POST',\n//         body: formData\n//       });\n\n//       if (!res.ok) {\n//         throw new Error(`Server responded with status ${res.status}`);\n//       }\n\n//       const data = await res.json();\n//       setAnalysisResult(data.response);\n//     } catch (err) {\n//       console.error(\"Error fetching response:\", err);\n//       setError(\"Error fetching response.\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mx-auto mt-12 p-8 bg-white shadow-lg rounded-lg\">\n//       <h1 className=\"text-2xl font-semibold text-gray-800 mb-6\">\n//         Resume Analysis üìù\n//       </h1>\n\n//       {/* Resume File Upload */}\n//       <div className=\"mb-4\">\n//         <label\n//           htmlFor=\"resumeUpload\"\n//           className=\"block text-gray-700 text-sm font-bold mb-2\"\n//         >\n//           Upload Resume:\n//         </label>\n//         <input\n//           type=\"file\"\n//           id=\"resumeUpload\"\n//           onChange={handleFileChange}\n//           className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n//         />\n//       </div>\n\n//       {/* Job Description Input */}\n//       <div className=\"mb-4\">\n//         <label\n//           htmlFor=\"jobDescription\"\n//           className=\"block text-gray-700 text-sm font-bold mb-2\"\n//         >\n//           Job Description:\n//         </label>\n//         <textarea\n//           id=\"jobDescription\"\n//           rows=\"4\"\n//           placeholder=\"Enter the job description...\"\n//           value={jobDescription}\n//           onChange={(e) => setJobDescription(e.target.value)}\n//           className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n//         />\n//       </div>\n\n//       <button\n//         onClick={handleAnalysis}\n//         className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n//         disabled={isLoading}\n//       >\n//         {isLoading ? 'Analyzing...' : 'Analyze Resume'}\n//       </button>\n\n//       {error && (\n//         <div className=\"mt-4 text-red-500\">\n//           <X className=\"inline-block mr-1\" size={16} />\n//           {error}\n//         </div>\n//       )}\n\n//       {analysisResult && (\n//         <div className=\"mt-8\">\n//           <h2 className=\"text-xl font-semibold text-gray-700 mb-4\">\n//             Analysis Result:\n//           </h2>\n//           <div className=\"bg-gray-100 p-4 rounded-lg\">\n//             <pre className=\"text-gray-600 whitespace-pre-wrap\">\n//               {typeof analysisResult === 'object'\n//                 ? JSON.stringify(analysisResult, null, 2)\n//                 : analysisResult}\n//             </pre>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ResumeAnalysisPage;\n\n// // src/components/ResumeAnalysisPage.js\n// import React, { useState } from 'react';\n// import { X } from 'lucide-react';\n// import AnalysisResultCard from './AnalysisResultCard';\n\n// function ResumeAnalysisPage() {\n//   const [resumeFile, setResumeFile] = useState(null);\n//   const [jobDescription, setJobDescription] = useState('');\n//   const [analysisResult, setAnalysisResult] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const handleFileChange = (event) => {\n//     setResumeFile(event.target.files[0]);\n//   };\n\n//   const handleAnalysis = async () => {\n//     if (!resumeFile) {\n//       setError('Please upload a resume file.');\n//       return;\n//     }\n//     if (!jobDescription) {\n//       setError('Please enter a job description.');\n//       return;\n//     }\n\n//     setIsLoading(true);\n//     setError(null);\n\n//     try {\n//       const formData = new FormData();\n//       formData.append('resumeFile', resumeFile);\n//       formData.append('jobDescription', jobDescription);\n\n//       const res = await fetch('http://localhost:4000/chat', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       if (!res.ok) {\n//         throw new Error(`Server responded with status ${res.status}`);\n//       }\n\n//       const data = await res.json();\n//       setAnalysisResult(data.response);\n//     } catch (err) {\n//       console.error(\"Error fetching response:\", err);\n//       setError(\"Error fetching response.\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mx-auto mt-12 p-8 bg-gray-50\">\n//       <h1 className=\"text-3xl font-semibold text-gray-800 mb-6\">Resume Analysis üìù</h1>\n\n//       {/* Resume File Upload */}\n//       <div className=\"mb-4\">\n//         <label htmlFor=\"resumeUpload\" className=\"block text-gray-700 text-sm font-bold mb-2\">\n//           Upload Resume:\n//         </label>\n//         <input\n//           type=\"file\"\n//           id=\"resumeUpload\"\n//           onChange={handleFileChange}\n//           className=\"shadow appearance-none border rounded w-full py-2 px-3\"\n//         />\n//       </div>\n\n//       {/* Job Description Input */}\n//       <div className=\"mb-4\">\n//         <label htmlFor=\"jobDescription\" className=\"block text-gray-700 text-sm font-bold mb-2\">\n//           Job Description:\n//         </label>\n//         <textarea\n//           id=\"jobDescription\"\n//           rows=\"4\"\n//           placeholder=\"Enter the job description...\"\n//           value={jobDescription}\n//           onChange={(e) => setJobDescription(e.target.value)}\n//           className=\"shadow appearance-none border rounded w-full py-2 px-3\"\n//         />\n//       </div>\n\n//       <button\n//         onClick={handleAnalysis}\n//         className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none\"\n//         disabled={isLoading}\n//       >\n//         {isLoading ? 'Analyzing...' : 'Analyze Resume'}\n//       </button>\n\n//       {error && (\n//         <div className=\"mt-4 text-red-500 flex items-center\">\n//           <X className=\"mr-1\" size={16} /> {error}\n//         </div>\n//       )}\n\n//       {analysisResult && (\n//         <div className=\"mt-8\">\n//           <AnalysisResultCard result={analysisResult} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ResumeAnalysisPage;\n\n//testttttttttt\n\n// import React, { useState } from 'react';\n// import { X } from 'lucide-react';\n// import AnalysisResultCard from './AnalysisResultCard';\n\n// function ResumeAnalysisPage() {\n//   const [resumeFile, setResumeFile] = useState(null);\n//   const [jobDescription, setJobDescription] = useState('');\n//   const [analysisResult, setAnalysisResult] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const handleFileChange = (event) => {\n//     setResumeFile(event.target.files[0]);\n//   };\n\n//   const handleAnalysis = async () => {\n//     if (!resumeFile) {\n//       setError('Please upload a resume file.');\n//       return;\n//     }\n//     if (!jobDescription) {\n//       setError('Please enter a job description.');\n//       return;\n//     }\n\n//     setIsLoading(true);\n//     setError(null);\n\n//     try {\n//       const formData = new FormData();\n//       formData.append('resumeFile', resumeFile);\n//       formData.append('jobDescription', jobDescription);\n\n//       const res = await fetch('http://localhost:4000/chat', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       if (!res.ok) {\n//         throw new Error(`Server responded with status ${res.status}`);\n//       }\n\n//       const data = await res.json();\n//       setAnalysisResult(data.response);\n//     } catch (err) {\n//       console.error(\"Error fetching response:\", err);\n//       setError(\"Error fetching response.\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-black py-12\">\n//       <div className=\"container mx-auto px-8\">\n//         <h1 className=\"text-3xl font-semibold mb-6\" style={{ color: '#daaa00' }}>\n//           Resume Analysis\n//         </h1>\n\n//         {/* Resume File Upload */}\n//         <div className=\"mb-4\">\n//           <label\n//             htmlFor=\"resumeUpload\"\n//             className=\"block text-sm font-bold mb-2\"\n//             style={{ color: '#ddb945' }}\n//           >\n//             Upload Resume:\n//           </label>\n//           <input\n//             type=\"file\"\n//             id=\"resumeUpload\"\n//             onChange={handleFileChange}\n//             className=\"w-full py-2 px-3 rounded border border-[#ddb945]\"\n//             style={{\n//               backgroundColor: '#6f727b',\n//               color: '#ddb945',\n//             }}\n//           />\n//         </div>\n\n//         {/* Job Description Input */}\n//         <div className=\"mb-4\">\n//           <label\n//             htmlFor=\"jobDescription\"\n//             className=\"block text-sm font-bold mb-2\"\n//             style={{ color: '#ddb945' }}\n//           >\n//             Job Description:\n//           </label>\n//           <textarea\n//             id=\"jobDescription\"\n//             rows=\"4\"\n//             placeholder=\"Enter the job description...\"\n//             value={jobDescription}\n//             onChange={(e) => setJobDescription(e.target.value)}\n//             className=\"w-full py-2 px-3 rounded border border-[#ddb945]\"\n//             style={{\n//               backgroundColor: '#6f727b',\n//               color: '#000000',\n//             }}\n//           />\n//         </div>\n\n//         <button\n//           onClick={handleAnalysis}\n//           disabled={isLoading}\n//           className=\"font-bold py-2 px-4 rounded\"\n//           style={{\n//             backgroundColor: isLoading ? '#6f727b' : '#ddb945',\n//             color: '#000000',\n//           }}\n//         >\n//           {isLoading ? 'Analyzing...' : 'Analyze Resume'}\n//         </button>\n\n//         {error && (\n//           <div className=\"mt-4 flex items-center\" style={{ color: '#DAA520' }}>\n//             <X className=\"mr-1\" size={16} /> {error}\n//           </div>\n//         )}\n\n//         {analysisResult && (\n//           <div className=\"mt-8\">\n//             <AnalysisResultCard result={analysisResult} />\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ResumeAnalysisPage;\n\n// src/components/ResumeAnalysisPage.js\nimport React, { useState } from 'react';\nimport { X } from 'lucide-react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport AnalysisResultCard from './AnalysisResultCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResumeAnalysisPage() {\n  _s();\n  const [resumeFile, setResumeFile] = useState(null);\n  const [jobDescription, setJobDescription] = useState('');\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Get the authenticated user's info from Auth0\n  const {\n    user\n  } = useAuth0();\n  const handleFileChange = event => {\n    setResumeFile(event.target.files[0]);\n  };\n  const handleAnalysis = async () => {\n    if (!resumeFile) {\n      setError('Please upload a resume file.');\n      return;\n    }\n    if (!jobDescription) {\n      setError('Please enter a job description.');\n      return;\n    }\n    if (!user || !user.sub) {\n      setError('User information not available.');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Build FormData and include the userId from Auth0\n      const formData = new FormData();\n      formData.append('resumeFile', resumeFile);\n      formData.append('jobDescription', jobDescription);\n      formData.append('userId', user.sub); // This is the unique user identifier\n\n      const res = await fetch('http://localhost:4000/chat', {\n        method: 'POST',\n        body: formData\n      });\n      if (!res.ok) {\n        throw new Error(`Server responded with status ${res.status}`);\n      }\n      const data = await res.json();\n      setAnalysisResult(data.response);\n    } catch (err) {\n      console.error(\"Error fetching response:\", err);\n      setError(\"Error fetching response.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-12 p-8 bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-semibold text-gray-800 mb-6\",\n      children: \"Resume Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"resumeUpload\",\n        className: \"block text-gray-700 text-sm font-bold mb-2\",\n        children: \"Upload Resume:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"resumeUpload\",\n        onChange: handleFileChange,\n        className: \"shadow appearance-none border rounded w-full py-2 px-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"jobDescription\",\n        className: \"block text-gray-700 text-sm font-bold mb-2\",\n        children: \"Job Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"jobDescription\",\n        rows: \"4\",\n        placeholder: \"Enter the job description...\",\n        value: jobDescription,\n        onChange: e => setJobDescription(e.target.value),\n        className: \"shadow appearance-none border rounded w-full py-2 px-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnalysis,\n      className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none\",\n      disabled: isLoading,\n      children: isLoading ? 'Analyzing...' : 'Analyze Resume'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-red-500 flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(X, {\n        className: \"mr-1\",\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 9\n    }, this), analysisResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: /*#__PURE__*/_jsxDEV(AnalysisResultCard, {\n        result: analysisResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 441,\n    columnNumber: 5\n  }, this);\n}\n_s(ResumeAnalysisPage, \"n6UG5LshjUm5icNwTALev5To56U=\", false, function () {\n  return [useAuth0];\n});\n_c = ResumeAnalysisPage;\nexport default ResumeAnalysisPage;\nvar _c;\n$RefreshReg$(_c, \"ResumeAnalysisPage\");","map":{"version":3,"names":["React","useState","X","useAuth0","AnalysisResultCard","jsxDEV","_jsxDEV","ResumeAnalysisPage","_s","resumeFile","setResumeFile","jobDescription","setJobDescription","analysisResult","setAnalysisResult","isLoading","setIsLoading","error","setError","user","handleFileChange","event","target","files","handleAnalysis","sub","formData","FormData","append","res","fetch","method","body","ok","Error","status","data","json","response","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","rows","placeholder","value","e","onClick","disabled","size","result","_c","$RefreshReg$"],"sources":["C:/Users/aarya/Hacathon-Boiler-KWA/src/components/ResumeAnalysisPage.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import { X } from 'lucide-react';\r\n\r\n// function ResumeAnalysisPage() {\r\n//   const [resumeFile, setResumeFile] = useState(null);\r\n//   const [jobDescription, setJobDescription] = useState('');\r\n//   const [analysisResult, setAnalysisResult] = useState('');\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   const handleFileChange = (event) => {\r\n//     const file = event.target.files[0];\r\n//     setResumeFile(file);\r\n//   };\r\n\r\n//   const handleAnalysis = async () => {\r\n//     if (!resumeFile) {\r\n//       setError('Please upload a resume file.');\r\n//       return;\r\n//     }\r\n//     if (!jobDescription) {\r\n//       setError('Please enter a job description.');\r\n//       return;\r\n//     }\r\n\r\n//     setIsLoading(true);\r\n//     setError(null);\r\n\r\n//     try {\r\n//       // Prepare FormData with the file and job description\r\n//       const formData = new FormData();\r\n//       formData.append('resumeFile', resumeFile);\r\n//       formData.append('jobDescription', jobDescription);\r\n\r\n//       // Send FormData to the backend\r\n//       const res = await fetch('http://localhost:4000/chat', {\r\n//         method: 'POST',\r\n//         body: formData\r\n//       });\r\n\r\n//       if (!res.ok) {\r\n//         throw new Error(`Server responded with status ${res.status}`);\r\n//       }\r\n\r\n//       const data = await res.json();\r\n//       setAnalysisResult(data.response);\r\n//     } catch (err) {\r\n//       console.error(\"Error fetching response:\", err);\r\n//       setError(\"Error fetching response.\");\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto mt-12 p-8 bg-white shadow-lg rounded-lg\">\r\n//       <h1 className=\"text-2xl font-semibold text-gray-800 mb-6\">\r\n//         Resume Analysis üìù\r\n//       </h1>\r\n      \r\n//       {/* Resume File Upload */}\r\n//       <div className=\"mb-4\">\r\n//         <label\r\n//           htmlFor=\"resumeUpload\"\r\n//           className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n//         >\r\n//           Upload Resume:\r\n//         </label>\r\n//         <input\r\n//           type=\"file\"\r\n//           id=\"resumeUpload\"\r\n//           onChange={handleFileChange}\r\n//           className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n//         />\r\n//       </div>\r\n      \r\n//       {/* Job Description Input */}\r\n//       <div className=\"mb-4\">\r\n//         <label\r\n//           htmlFor=\"jobDescription\"\r\n//           className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n//         >\r\n//           Job Description:\r\n//         </label>\r\n//         <textarea\r\n//           id=\"jobDescription\"\r\n//           rows=\"4\"\r\n//           placeholder=\"Enter the job description...\"\r\n//           value={jobDescription}\r\n//           onChange={(e) => setJobDescription(e.target.value)}\r\n//           className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n//         />\r\n//       </div>\r\n      \r\n//       <button\r\n//         onClick={handleAnalysis}\r\n//         className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n//         disabled={isLoading}\r\n//       >\r\n//         {isLoading ? 'Analyzing...' : 'Analyze Resume'}\r\n//       </button>\r\n      \r\n//       {error && (\r\n//         <div className=\"mt-4 text-red-500\">\r\n//           <X className=\"inline-block mr-1\" size={16} />\r\n//           {error}\r\n//         </div>\r\n//       )}\r\n      \r\n//       {analysisResult && (\r\n//         <div className=\"mt-8\">\r\n//           <h2 className=\"text-xl font-semibold text-gray-700 mb-4\">\r\n//             Analysis Result:\r\n//           </h2>\r\n//           <div className=\"bg-gray-100 p-4 rounded-lg\">\r\n//             <pre className=\"text-gray-600 whitespace-pre-wrap\">\r\n//               {typeof analysisResult === 'object'\r\n//                 ? JSON.stringify(analysisResult, null, 2)\r\n//                 : analysisResult}\r\n//             </pre>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ResumeAnalysisPage;\r\n\r\n// // src/components/ResumeAnalysisPage.js\r\n// import React, { useState } from 'react';\r\n// import { X } from 'lucide-react';\r\n// import AnalysisResultCard from './AnalysisResultCard';\r\n\r\n// function ResumeAnalysisPage() {\r\n//   const [resumeFile, setResumeFile] = useState(null);\r\n//   const [jobDescription, setJobDescription] = useState('');\r\n//   const [analysisResult, setAnalysisResult] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   const handleFileChange = (event) => {\r\n//     setResumeFile(event.target.files[0]);\r\n//   };\r\n\r\n//   const handleAnalysis = async () => {\r\n//     if (!resumeFile) {\r\n//       setError('Please upload a resume file.');\r\n//       return;\r\n//     }\r\n//     if (!jobDescription) {\r\n//       setError('Please enter a job description.');\r\n//       return;\r\n//     }\r\n\r\n//     setIsLoading(true);\r\n//     setError(null);\r\n\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append('resumeFile', resumeFile);\r\n//       formData.append('jobDescription', jobDescription);\r\n\r\n//       const res = await fetch('http://localhost:4000/chat', {\r\n//         method: 'POST',\r\n//         body: formData,\r\n//       });\r\n\r\n//       if (!res.ok) {\r\n//         throw new Error(`Server responded with status ${res.status}`);\r\n//       }\r\n\r\n//       const data = await res.json();\r\n//       setAnalysisResult(data.response);\r\n//     } catch (err) {\r\n//       console.error(\"Error fetching response:\", err);\r\n//       setError(\"Error fetching response.\");\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto mt-12 p-8 bg-gray-50\">\r\n//       <h1 className=\"text-3xl font-semibold text-gray-800 mb-6\">Resume Analysis üìù</h1>\r\n\r\n//       {/* Resume File Upload */}\r\n//       <div className=\"mb-4\">\r\n//         <label htmlFor=\"resumeUpload\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n//           Upload Resume:\r\n//         </label>\r\n//         <input\r\n//           type=\"file\"\r\n//           id=\"resumeUpload\"\r\n//           onChange={handleFileChange}\r\n//           className=\"shadow appearance-none border rounded w-full py-2 px-3\"\r\n//         />\r\n//       </div>\r\n\r\n//       {/* Job Description Input */}\r\n//       <div className=\"mb-4\">\r\n//         <label htmlFor=\"jobDescription\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n//           Job Description:\r\n//         </label>\r\n//         <textarea\r\n//           id=\"jobDescription\"\r\n//           rows=\"4\"\r\n//           placeholder=\"Enter the job description...\"\r\n//           value={jobDescription}\r\n//           onChange={(e) => setJobDescription(e.target.value)}\r\n//           className=\"shadow appearance-none border rounded w-full py-2 px-3\"\r\n//         />\r\n//       </div>\r\n\r\n//       <button\r\n//         onClick={handleAnalysis}\r\n//         className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none\"\r\n//         disabled={isLoading}\r\n//       >\r\n//         {isLoading ? 'Analyzing...' : 'Analyze Resume'}\r\n//       </button>\r\n\r\n//       {error && (\r\n//         <div className=\"mt-4 text-red-500 flex items-center\">\r\n//           <X className=\"mr-1\" size={16} /> {error}\r\n//         </div>\r\n//       )}\r\n\r\n//       {analysisResult && (\r\n//         <div className=\"mt-8\">\r\n//           <AnalysisResultCard result={analysisResult} />\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ResumeAnalysisPage;\r\n\r\n//testttttttttt\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { X } from 'lucide-react';\r\n// import AnalysisResultCard from './AnalysisResultCard';\r\n\r\n// function ResumeAnalysisPage() {\r\n//   const [resumeFile, setResumeFile] = useState(null);\r\n//   const [jobDescription, setJobDescription] = useState('');\r\n//   const [analysisResult, setAnalysisResult] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   const handleFileChange = (event) => {\r\n//     setResumeFile(event.target.files[0]);\r\n//   };\r\n\r\n//   const handleAnalysis = async () => {\r\n//     if (!resumeFile) {\r\n//       setError('Please upload a resume file.');\r\n//       return;\r\n//     }\r\n//     if (!jobDescription) {\r\n//       setError('Please enter a job description.');\r\n//       return;\r\n//     }\r\n\r\n//     setIsLoading(true);\r\n//     setError(null);\r\n\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append('resumeFile', resumeFile);\r\n//       formData.append('jobDescription', jobDescription);\r\n\r\n//       const res = await fetch('http://localhost:4000/chat', {\r\n//         method: 'POST',\r\n//         body: formData,\r\n//       });\r\n\r\n//       if (!res.ok) {\r\n//         throw new Error(`Server responded with status ${res.status}`);\r\n//       }\r\n\r\n//       const data = await res.json();\r\n//       setAnalysisResult(data.response);\r\n//     } catch (err) {\r\n//       console.error(\"Error fetching response:\", err);\r\n//       setError(\"Error fetching response.\");\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-black py-12\">\r\n//       <div className=\"container mx-auto px-8\">\r\n//         <h1 className=\"text-3xl font-semibold mb-6\" style={{ color: '#daaa00' }}>\r\n//           Resume Analysis\r\n//         </h1>\r\n\r\n//         {/* Resume File Upload */}\r\n//         <div className=\"mb-4\">\r\n//           <label\r\n//             htmlFor=\"resumeUpload\"\r\n//             className=\"block text-sm font-bold mb-2\"\r\n//             style={{ color: '#ddb945' }}\r\n//           >\r\n//             Upload Resume:\r\n//           </label>\r\n//           <input\r\n//             type=\"file\"\r\n//             id=\"resumeUpload\"\r\n//             onChange={handleFileChange}\r\n//             className=\"w-full py-2 px-3 rounded border border-[#ddb945]\"\r\n//             style={{\r\n//               backgroundColor: '#6f727b',\r\n//               color: '#ddb945',\r\n//             }}\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Job Description Input */}\r\n//         <div className=\"mb-4\">\r\n//           <label\r\n//             htmlFor=\"jobDescription\"\r\n//             className=\"block text-sm font-bold mb-2\"\r\n//             style={{ color: '#ddb945' }}\r\n//           >\r\n//             Job Description:\r\n//           </label>\r\n//           <textarea\r\n//             id=\"jobDescription\"\r\n//             rows=\"4\"\r\n//             placeholder=\"Enter the job description...\"\r\n//             value={jobDescription}\r\n//             onChange={(e) => setJobDescription(e.target.value)}\r\n//             className=\"w-full py-2 px-3 rounded border border-[#ddb945]\"\r\n//             style={{\r\n//               backgroundColor: '#6f727b',\r\n//               color: '#000000',\r\n//             }}\r\n//           />\r\n//         </div>\r\n\r\n//         <button\r\n//           onClick={handleAnalysis}\r\n//           disabled={isLoading}\r\n//           className=\"font-bold py-2 px-4 rounded\"\r\n//           style={{\r\n//             backgroundColor: isLoading ? '#6f727b' : '#ddb945',\r\n//             color: '#000000',\r\n//           }}\r\n//         >\r\n//           {isLoading ? 'Analyzing...' : 'Analyze Resume'}\r\n//         </button>\r\n\r\n//         {error && (\r\n//           <div className=\"mt-4 flex items-center\" style={{ color: '#DAA520' }}>\r\n//             <X className=\"mr-1\" size={16} /> {error}\r\n//           </div>\r\n//         )}\r\n\r\n//         {analysisResult && (\r\n//           <div className=\"mt-8\">\r\n//             <AnalysisResultCard result={analysisResult} />\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ResumeAnalysisPage;\r\n\r\n// src/components/ResumeAnalysisPage.js\r\nimport React, { useState } from 'react';\r\nimport { X } from 'lucide-react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport AnalysisResultCard from './AnalysisResultCard';\r\n\r\nfunction ResumeAnalysisPage() {\r\n  const [resumeFile, setResumeFile] = useState(null);\r\n  const [jobDescription, setJobDescription] = useState('');\r\n  const [analysisResult, setAnalysisResult] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Get the authenticated user's info from Auth0\r\n  const { user } = useAuth0();\r\n\r\n  const handleFileChange = (event) => {\r\n    setResumeFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleAnalysis = async () => {\r\n    if (!resumeFile) {\r\n      setError('Please upload a resume file.');\r\n      return;\r\n    }\r\n    if (!jobDescription) {\r\n      setError('Please enter a job description.');\r\n      return;\r\n    }\r\n    if (!user || !user.sub) {\r\n      setError('User information not available.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Build FormData and include the userId from Auth0\r\n      const formData = new FormData();\r\n      formData.append('resumeFile', resumeFile);\r\n      formData.append('jobDescription', jobDescription);\r\n      formData.append('userId', user.sub); // This is the unique user identifier\r\n\r\n      const res = await fetch('http://localhost:4000/chat', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!res.ok) {\r\n        throw new Error(`Server responded with status ${res.status}`);\r\n      }\r\n\r\n      const data = await res.json();\r\n      setAnalysisResult(data.response);\r\n    } catch (err) {\r\n      console.error(\"Error fetching response:\", err);\r\n      setError(\"Error fetching response.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto mt-12 p-8 bg-gray-50\">\r\n      <h1 className=\"text-3xl font-semibold text-gray-800 mb-6\">Resume Analysis</h1>\r\n\r\n      {/* Resume File Upload */}\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"resumeUpload\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n          Upload Resume:\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"resumeUpload\"\r\n          onChange={handleFileChange}\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3\"\r\n        />\r\n      </div>\r\n\r\n      {/* Job Description Input */}\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"jobDescription\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n          Job Description:\r\n        </label>\r\n        <textarea\r\n          id=\"jobDescription\"\r\n          rows=\"4\"\r\n          placeholder=\"Enter the job description...\"\r\n          value={jobDescription}\r\n          onChange={(e) => setJobDescription(e.target.value)}\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3\"\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        onClick={handleAnalysis}\r\n        className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none\"\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? 'Analyzing...' : 'Analyze Resume'}\r\n      </button>\r\n\r\n      {error && (\r\n        <div className=\"mt-4 text-red-500 flex items-center\">\r\n          <X className=\"mr-1\" size={16} /> {error}\r\n        </div>\r\n      )}\r\n\r\n      {analysisResult && (\r\n        <div className=\"mt-8\">\r\n          <AnalysisResultCard result={analysisResult} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResumeAnalysisPage;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}