{"ast":null,"code":"var _jsxFileName = \"/Users/abhinas8/Downloads/ATS-chat/Hacathon-Boiler-KWA/src/components/JobMatchingPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Search } from 'lucide-react';\n\n// function JobMatchingPage() {\n//   const [jobMatches, setJobMatches] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const handleSearch = async () => {\n//     setIsLoading(true);\n//     setError(null);\n\n//     // Simulate API call\n//     setTimeout(() => {\n//       setIsLoading(false);\n//       setJobMatches([\n//         {\n//           id: 1,\n//           title: 'Software Engineer',\n//           company: 'Google',\n//           location: 'Mountain View, CA',\n//         },\n//         {\n//           id: 2,\n//           title: 'Data Scientist',\n//           company: 'Amazon',\n//           location: 'Seattle, WA',\n//         },\n//       ]);\n//     }, 2000);\n//   };\n\n//   return (\n//     <div className=\"container mx-auto mt-12 p-8 bg-white shadow-lg rounded-lg\">\n//       <h1 className=\"text-2xl font-semibold text-gray-800 mb-6\">Job Matching ðŸ’¼</h1>\n//       <button\n//         onClick={handleSearch}\n//         className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n//         disabled={isLoading}\n//       >\n//         {isLoading ? 'Searching...' : 'Find Job Matches'}\n//       </button>\n//       {error && (\n//         <div className=\"mt-4 text-red-500\">\n//           {error}\n//         </div>\n//       )}\n//       {jobMatches.length > 0 && (\n//         <div className=\"mt-8\">\n//           <h2 className=\"text-xl font-semibold text-gray-700 mb-4\">Job Matches:</h2>\n//           <ul>\n//             {jobMatches.map((job) => (\n//               <li key={job.id} className=\"bg-gray-100 p-4 rounded-lg mb-2\">\n//                 <p className=\"text-gray-600\"><strong>{job.title}</strong></p>\n//                 <p className=\"text-gray-600\">{job.company}, {job.location}</p>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default JobMatchingPage;\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobMatchingPage = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [response, setResponse] = useState('');\n  const queryLlama = async () => {\n    try {\n      const res = await fetch('http://localhost:5000/query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: inputText\n        })\n      });\n      const data = await res.json();\n      setResponse(data.response);\n    } catch (error) {\n      console.error(\"Error fetching response:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"border p-2 w-full\",\n      rows: \"4\",\n      placeholder: \"Enter your query...\",\n      value: inputText,\n      onChange: e => setInputText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 text-white p-2 mt-2\",\n      onClick: queryLlama,\n      children: \"Ask Llama\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-2 border\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(JobMatchingPage, \"Mo0GBVKU+f8lSL8udRItNYBP7eI=\");\n_c = JobMatchingPage;\nexport default JobMatchingPage;\nvar _c;\n$RefreshReg$(_c, \"JobMatchingPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","JobMatchingPage","_s","inputText","setInputText","response","setResponse","queryLlama","res","fetch","method","headers","body","JSON","stringify","prompt","data","json","error","console","className","children","rows","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/abhinas8/Downloads/ATS-chat/Hacathon-Boiler-KWA/src/components/JobMatchingPage.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Search } from 'lucide-react';\n\n// function JobMatchingPage() {\n//   const [jobMatches, setJobMatches] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const handleSearch = async () => {\n//     setIsLoading(true);\n//     setError(null);\n\n//     // Simulate API call\n//     setTimeout(() => {\n//       setIsLoading(false);\n//       setJobMatches([\n//         {\n//           id: 1,\n//           title: 'Software Engineer',\n//           company: 'Google',\n//           location: 'Mountain View, CA',\n//         },\n//         {\n//           id: 2,\n//           title: 'Data Scientist',\n//           company: 'Amazon',\n//           location: 'Seattle, WA',\n//         },\n//       ]);\n//     }, 2000);\n//   };\n\n//   return (\n//     <div className=\"container mx-auto mt-12 p-8 bg-white shadow-lg rounded-lg\">\n//       <h1 className=\"text-2xl font-semibold text-gray-800 mb-6\">Job Matching ðŸ’¼</h1>\n//       <button\n//         onClick={handleSearch}\n//         className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n//         disabled={isLoading}\n//       >\n//         {isLoading ? 'Searching...' : 'Find Job Matches'}\n//       </button>\n//       {error && (\n//         <div className=\"mt-4 text-red-500\">\n//           {error}\n//         </div>\n//       )}\n//       {jobMatches.length > 0 && (\n//         <div className=\"mt-8\">\n//           <h2 className=\"text-xl font-semibold text-gray-700 mb-4\">Job Matches:</h2>\n//           <ul>\n//             {jobMatches.map((job) => (\n//               <li key={job.id} className=\"bg-gray-100 p-4 rounded-lg mb-2\">\n//                 <p className=\"text-gray-600\"><strong>{job.title}</strong></p>\n//                 <p className=\"text-gray-600\">{job.company}, {job.location}</p>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default JobMatchingPage;\n\n\nimport { useState } from 'react';\n\nconst JobMatchingPage = () => {\n    const [inputText, setInputText] = useState('');\n    const [response, setResponse] = useState('');\n\n    const queryLlama = async () => {\n        try {\n            const res = await fetch('http://localhost:5000/query', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ prompt: inputText })\n            });\n            const data = await res.json();\n            setResponse(data.response);\n        } catch (error) {\n            console.error(\"Error fetching response:\", error);\n        }\n    };\n\n    return (\n        <div className=\"p-4\">\n            <textarea\n                className=\"border p-2 w-full\"\n                rows=\"4\"\n                placeholder=\"Enter your query...\"\n                value={inputText}\n                onChange={(e) => setInputText(e.target.value)}\n            />\n            <button className=\"bg-blue-500 text-white p-2 mt-2\" onClick={queryLlama}>\n                Ask Llama\n            </button>\n            {response && (\n                <div className=\"mt-4 p-2 border\">\n                    <strong>Response:</strong>\n                    <p>{response}</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default JobMatchingPage;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QACnDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAEZ;QAAU,CAAC;MAC9C,CAAC,CAAC;MACF,MAAMa,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;MAC7BX,WAAW,CAACU,IAAI,CAACX,QAAQ,CAAC;IAC9B,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBrB,OAAA;MACIoB,SAAS,EAAC,mBAAmB;MAC7BE,IAAI,EAAC,GAAG;MACRC,WAAW,EAAC,qBAAqB;MACjCC,KAAK,EAAErB,SAAU;MACjBsB,QAAQ,EAAGC,CAAC,IAAKtB,YAAY,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACF/B,OAAA;MAAQoB,SAAS,EAAC,iCAAiC;MAACY,OAAO,EAAEzB,UAAW;MAAAc,QAAA,EAAC;IAEzE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACR1B,QAAQ,iBACLL,OAAA;MAAKoB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BrB,OAAA;QAAAqB,QAAA,EAAQ;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1B/B,OAAA;QAAAqB,QAAA,EAAIhB;MAAQ;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC7B,EAAA,CAxCID,eAAe;AAAAgC,EAAA,GAAfhC,eAAe;AA0CrB,eAAeA,eAAe;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}